openapi: 3.0.1
info:
  title: Petka Infrastructure Project
  description: Api first project
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Petka
    url: https://github.com/petka5/pis
    email: petar.georgiev@gmail.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://localhost:8080/petstore
security:
  - ApiKeyAuth: [ ]
paths:
  /pets:
    get:
      description: Returns all pets from the system that the user has access to
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          schema:
            maximum: 200
            minimum: 1
            type: integer
            format: int32
      responses:
        200:
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      x-api-first-handler: admin.Dashboard.methodLevel
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newPet'
        required: true
      responses:
        200:
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      x-api-first-handler: admin.Dashboard.postHandler
      x-codegen-request-body-name: pet
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have
        access to the pet
      operationId: findPetById
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: pet deleted
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    x-api-first-handler: admin.Dashboard.pathLevel
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api-key
  schemas:
    pet:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    newPet:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    errorModel:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
x-api-first-error-mapping:
  404:
    - java.util.NoSuchElementException
    - java.lang.IndexOutOfBoundsException
  406:
    - java.lang.UnsupportedOperationException
    - java.lang.IllegalArgumentException
    - java.lang.IllegalStateException
  409:
    - java.util.ConcurrentModificationException
    - java.util.EmptyStackException
  500:
    - java.sql.SQLException
